# Generated by Django 5.2.4 on 2025-07-24 02:00

import django.db.models.deletion
import django.utils.timezone
import myapp.models
import uuid
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='Apartment',
            fields=[
                ('apartmentCode', models.CharField(max_length=10, primary_key=True, serialize=False, unique=True)),
                ('floor', models.PositiveIntegerField()),
                ('area', models.PositiveIntegerField()),
                ('status', models.CharField(choices=[('active', 'Active'), ('inactive', 'Inactive')], max_length=10)),
            ],
            options={
                'ordering': ['apartmentCode'],
            },
        ),
        migrations.CreateModel(
            name='Role',
            fields=[
                ('role_id', models.AutoField(primary_key=True, serialize=False)),
                ('name', models.CharField(choices=[('admin', 'Admin'), ('resident', 'Resident')], max_length=50)),
                ('description', models.CharField(blank=True, max_length=200, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='Member',
            fields=[
                ('memberId', models.AutoField(primary_key=True, serialize=False)),
                ('isOwner', models.BooleanField(default=False)),
                ('apartment', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='myapp.apartment')),
            ],
            options={
                'ordering': ['apartment'],
            },
        ),
        migrations.CreateModel(
            name='Resident',
            fields=[
                ('residentId', models.AutoField(primary_key=True, serialize=False)),
                ('fullName', models.CharField(max_length=100)),
                ('dateOfBirth', models.DateField(null=True)),
                ('phoneNumber', models.CharField(max_length=10, null=True)),
                ('email', models.EmailField(max_length=254, unique=True)),
                ('gender', models.CharField(choices=[('male', 'Male'), ('female', 'Female')], max_length=6, null=True)),
                ('idNumber', models.CharField(max_length=12, null=True, unique=True)),
                ('status', models.CharField(choices=[('living', 'Living'), ('moved', 'Moved')], max_length=6)),
                ('apartmentCode', models.ManyToManyField(through='myapp.Member', to='myapp.apartment')),
            ],
        ),
        migrations.AddField(
            model_name='member',
            name='resident',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='myapp.resident'),
        ),
        migrations.CreateModel(
            name='Account',
            fields=[
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('first_name', models.CharField(blank=True, max_length=150, verbose_name='first name')),
                ('last_name', models.CharField(blank=True, max_length=150, verbose_name='last name')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.', verbose_name='active')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('pkid', models.BigAutoField(editable=False, primary_key=True, serialize=False)),
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, unique=True)),
                ('email', models.EmailField(db_index=True, max_length=254, unique=True, verbose_name='Email address')),
                ('username', models.CharField(max_length=60, verbose_name='Username')),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.permission', verbose_name='user permissions')),
                ('apartmentCode', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='myapp.apartment')),
                ('role', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='myapp.role')),
            ],
            options={
                'ordering': ['-date_joined'],
            },
            managers=[
                ('objects', myapp.models.AccountManager()),
            ],
        ),
        migrations.AlterUniqueTogether(
            name='member',
            unique_together={('resident', 'apartment')},
        ),
    ]
